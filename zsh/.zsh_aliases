# General alias
alias x='exit'
alias runp='lsof -i '
alias ll='eza -alh --icons=always'
alias ls='eza --color=always --long --git --icons=always'
#alias ll='ls -la'
alias tree='eza --tree --level=2 --long'
alias zalias='vim ~/.zsh_aliases'
alias zrc='vim ~/.zshrc'
alias zrel='source ~/.zshrc'
alias usage='du -h -d1'
alias myip="curl https://ipinfo.io/json; echo"
alias code='code . -r'
alias whs='wormhole send'
alias serpl='serpl --project-root .'
#alias cd='z'
alias lzg='lazygit'
alias lzd='lazydocker'
alias zz='z -'
alias cf='copyfile'
alias cpath='copypath'

alias psg='pass -c gh/ibis-nreina'
alias pvpn='pass -c vpn/ibis/bluenap'
#alias yz='yazi'
# bun completions
function yz() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}
alias s='sesh connect "$(sesh list -i | gum filter --limit 1 --placeholder '\''Pick a sesh'\'' --prompt='\''âš¡'\'')"'
# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"


alias rm='rm -rf'
alias cl='clear'
alias cat='bat --style=plain'

# Project utils
alias python='python3'

alias ydmp3='yt-dlp -x --audio-format mp3' 

# LCM

# IBIS VMS
alias ctzen='ssh root@157.245.243.3'    
alias ctztest='ssh root@167.71.16.63'    
alias rbltest='ssh -i ~/.ssh/id_nreina_work root@10.166.70.144'
alias rbldb='ssh -i ~/.ssh/id_nreina_work rbl_root@10.166.241.70'
alias rblprod='ssh -i ~/.ssh/id_nreina_work rbl_root@10.166.241.72'
alias bzbtest='ssh -i ~/.ssh/id_nreina_work ibisadmin@10.11.70.57'
# alias bzbprod='ssh  ibisadmin@10.11.70.55'
alias bzbprod='ssh -i ~/.ssh/id_nreina_work ibisadmin@10.11.70.55'
alias bzbproddb='ssh -i ~/.ssh/id_nreina_work ibisadmin@10.11.70.58'
alias massyvm='ssh root@143.198.170.219'
# alias fappivm='ssh root@167.99.126.136'
# alias thubvm='ssh ibis@10.10.210.221'
alias touristtest='ssh root@159.223.9.118'
alias gov1='ssh ibisadmin@192.168.217.11'
alias gov2='ssh ibisadmin@192.168.217.12'
alias bonith='ssh root@10.166.70.136'
alias ibisth='ssh ibis@10.10.210.221'
alias tcbprod='ssh -i ~/.ssh/id_nreina_work root@192.168.218.11'
alias otrobanda='ssh -i ~/.ssh/id_nreina_work root@174.138.44.254'
alias tcbproddb='ssh root@192.168.218.12'
# alias bonivm='ssh root@10.166.70.136'
alias ynoconfig='ssh -i ~/.ssh/id_nreina_work root@10.166.70.131'
alias ynodev='ssh -i ~/.ssh/id_nreina_work ynohub_developer@10.10.210.227'
alias ynotest='ssh -i ~/.ssh/id_nreina_work root@104.131.188.59'
alias amqest='ssh -i ~/.ssh/id_nreina_work root@167.71.82.146'
alias ynodigital='ssh -i ~/.ssh/id_nreina_work root@138.197.82.129'
alias fgbtest='ssh reinane@208.138.26.170'
# Client VMS
alias lcmpb='ssh -i ~/.ssh/id_nreinamm root@142.93.73.130'
alias lcmsrv='ssh -i ~/.ssh/id_nreinamm root@165.227.76.35'
alias ynodigital_mm='ssh -i ~/.ssh/id_nreinamm root@138.197.82.129'
# 165.227.76.35
#
#
#
# GIT Alias
alias gwt='manage-worktree.sh'

gcmaps() {
    git add .
    if [ "$1" != "" ] # or better, if [ -n "$1" ]
    then
        git commit -m "$1"
    else
        git commit -m update
    fi
    git push
}

# Drizzle alias
alias drstudio='npx drizzle-kit studio'
alias drpush='npx drizzle-kit push'
alias drpull='npx drizzle-kit pull'
alias drgen='npx drizzle-kit generate'
alias drmigrate='npx drizzle-kit migrate'

# Docker 
alias dps='docker ps --format="table {{.Names}}\t{{.Ports}}\t{{.Status}}\t{{.CreatedAt}}"'
alias redis='docker exec -it redis redis-cli'
alias postgresdb='docker exec -it postgres-db psql postgres postgres'
alias dclean='docker rmi  -f $(docker images -a --filter=dangling=true -q)'
alias dimgs='docker image ls'
alias dcd='docker compose down'
alias dcl='docker compose logs -f'
alias dcu='docker compose up -d --build'
alias dcu-dev='docker compose -f docker-compose-dev.yaml up -d --build'
alias dcd-iso-dev='docker compose -f docker-compose-iso-dev.yaml down'
alias dcl-iso-dev='docker compose -f docker-compose-iso-dev.yaml logs -f'
alias dcu-iso-dev='docker compose -f docker-compose-iso-dev.yaml up -d  && dcl-iso-dev'
alias dcub-iso-dev='docker compose -f docker-compose-iso-dev.yaml up -d --build && dcl-iso-dev'
alias dcd-iso='docker compose -f docker-compose-iso.yaml down'
alias dcl-iso='docker compose -f docker-compose-iso.yaml logs -f'
alias dcu-iso='docker compose -f docker-compose-iso.yaml up -d  && dcl-iso-dev'
alias dcub-iso='docker compose -f docker-compose-iso.yaml up -d --build && dcl-iso-dev'
alias dcub-iso-scale='docker compose -f docker-compose-iso-scale.yaml up -d --build && dcl-iso-dev'
alias dcl-dev='docker compose -f docker-compose-dev.yaml logs -f'
alias dcd-dev='docker compose -f docker-compose-dev.yaml down'
alias dcul='dcu && dcl'
alias dcul-dev='dcu-dev && dcl-dev'

#Elixir/mix /hex
alias mdg='mix deps.get'
alias iexphx='iex -S mix phx.server'
alias iexmix='iex -S mix'
alias meres='mix ecto.reset'
alias mem='mix ecto.migrate'
alias mpgc='mix phx.gen.context'
alias mpgl='mix phx.gen.live'

# Kubectl
alias k='kubectl'
alias kgall='k get all'
alias kpods='k get pods'
alias kapply='k apply -f'

# Quarkus
alias qkcreate='./mvnw io.quarkus:quarkus-maven-plugin:create'
# alias qkdev='./mvnw compile quarkus:dev'
alias qkdev='mvn compile quarkus:dev'
alias qkbuild='rm -r target && mvn package -Dquarkus.package.type=uber-jar -Dmaven.test.skip=true'
alias qkjar='java -jar ./target/*.jar'


# tmux
alias mn='tmux new -s $(pwd | sed "s/.*\///g")'
alias ma='tmux a'
alias tmls='tmux ls'
alias vim=nvim
#alias ff='fd --type f --hidden -E node_modules -E .git -E .svelte-kit | fzf-tmux -p --reverse  --preview 'bat --style=numbers --color=always --line-range :500 {}' | xargs zellij edit'


# zellij
alias ff="fd --type f --hidden -E node_modules -E .git -E .svelte-kit -E target -E .mvn | fzf-tmux -p --reverse  --preview 'bat --style=numbers --color=always --line-range :500 {}' | xargs zellij edit"
alias fnv="fd --type f --hidden -E node_modules -E .git -E .svelte-kit -E target -E .mvn | fzf-tmux -p --reverse  --preview 'bat --style=numbers --color=always --line-range :500 {}' | xargs nvim edit"
# Marp CLI shortcuts
alias mprev='marp slides.md --preview --watch'
alias mpdf='marp slides.md --pdf'
alias mppt='marp slides.md --pptx'


# Spring Boot
alias sbbuild='rm -r target && mvn clean package -Dmaven.test.skip=true'
alias sbrun='mvn compile spring-boot:run'

escape_for_json() { python3 -c 'import json,sys; print(json.dumps(sys.stdin.read()))'; }

